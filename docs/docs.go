// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Kredit Plus",
            "url": "https://kreditplus.com",
            "email": "support@kreditplus.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/score/credit/{phoneNumber}": {
            "post": {
                "description": "Los Scorepro",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SCORE PRO"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "scoring type by scs",
                        "name": "scs",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Mobile Phone",
                        "name": "phoneNumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PickleDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controllers.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.CreditScoreResp"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiResponse"
                        }
                    }
                }
            }
        },
        "/score/credit/{phoneNumber}/limit": {
            "post": {
                "description": "Los Scorepro LIMIT",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SCORE PRO"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Mobile Phone",
                        "name": "phoneNumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PickleLimitDto"
                        }
                    },
                    {
                        "type": "string",
                        "description": "scoring type by scs",
                        "name": "scs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controllers.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.CreditScoreResp"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiResponse"
                        }
                    }
                }
            }
        },
        "/scorepro/kmb/idx": {
            "post": {
                "description": "Get Scoring Pickle \u0026 Experian",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TELCOSCORE"
                ],
                "summary": "Telcoscore KMB Scoring",
                "parameters": [
                    {
                        "description": "Body payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/scorepro.PickleModelingDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controllers.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/scorepro.ScoreproResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiResponse"
                        }
                    }
                }
            }
        },
        "/scorepro/wg/idx": {
            "post": {
                "description": "Get Scoring Pickle \u0026 Experian",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TELCOSCORE"
                ],
                "summary": "Telcoscore WG Scoring",
                "parameters": [
                    {
                        "description": "Body payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/scorepro.PickleModelingDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controllers.ApiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/scorepro.WgScoreproResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.ApiResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "errors": {
                    "type": "object"
                },
                "messages": {
                    "type": "string"
                },
                "server_time": {
                    "type": "string"
                }
            }
        },
        "dto.PickleDto": {
            "type": "object",
            "required": [
                "ANGS_",
                "Age_",
                "CatID_",
                "DP_",
                "Dpnt_",
                "Educ_",
                "Gnr_",
                "Hmsts_",
                "IIR_",
                "Inc_",
                "Jobex_",
                "Lnstay_",
                "Mrtl_",
                "NTF_",
                "OrderID",
                "Prof_",
                "SpsInc_",
                "Tnr_",
                "VarInc_",
                "Zip_"
            ],
            "properties": {
                "ANGS_": {
                    "type": "integer"
                },
                "Age_": {
                    "type": "integer"
                },
                "CatID_": {
                    "type": "string"
                },
                "DP_": {
                    "type": "integer"
                },
                "Dpnt_": {
                    "type": "integer"
                },
                "Educ_": {
                    "type": "string"
                },
                "Gnr_": {
                    "type": "string"
                },
                "Hmsts_": {
                    "type": "string"
                },
                "IIR_": {
                    "type": "integer"
                },
                "Inc_": {
                    "type": "integer"
                },
                "Jobex_": {
                    "type": "integer"
                },
                "Lnstay_": {
                    "type": "integer"
                },
                "Mrtl_": {
                    "type": "string"
                },
                "NTF_": {
                    "type": "integer"
                },
                "OrderID": {
                    "type": "string"
                },
                "Prof_": {
                    "type": "string"
                },
                "SpsInc_": {
                    "type": "integer"
                },
                "Tnr_": {
                    "type": "integer"
                },
                "VarInc_": {
                    "type": "integer"
                },
                "Zip_": {
                    "type": "string"
                }
            }
        },
        "dto.PickleLimitDto": {
            "type": "object",
            "properties": {
                "Dep_v": {
                    "type": "number"
                },
                "Education_v": {
                    "type": "string"
                },
                "Gender_v": {
                    "type": "string"
                },
                "Homests_v": {
                    "type": "string"
                },
                "INCMJT_v": {
                    "type": "number"
                },
                "JobExp_v": {
                    "type": "number"
                },
                "LenOfStay_v": {
                    "type": "number"
                },
                "MaritalSts_v": {
                    "type": "string"
                },
                "OrderID": {
                    "type": "string"
                },
                "Profession_v": {
                    "type": "string"
                },
                "ZIP3_v": {
                    "type": "string"
                },
                "age_v": {
                    "type": "number"
                }
            }
        },
        "models.CreditScoreResp": {
            "type": "object",
            "properties": {
                "ProspectID": {
                    "type": "string"
                },
                "experian_id": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "scorepro.PickleModelingDto": {
            "type": "object",
            "required": [
                "cb_found",
                "journey",
                "phone_number",
                "prospect_id",
                "requestor_id",
                "score_generator_id"
            ],
            "properties": {
                "cb_found": {
                    "type": "boolean"
                },
                "data": {
                    "type": "object"
                },
                "journey": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "prospect_id": {
                    "type": "string"
                },
                "requestor_id": {
                    "type": "string"
                },
                "score_generator_id": {
                    "type": "string"
                },
                "status_konsumen": {
                    "type": "string"
                },
                "supplier_id": {
                    "type": "string"
                }
            }
        },
        "scorepro.ScoreproResponse": {
            "type": "object",
            "properties": {
                "phone_number": {
                    "type": "string"
                },
                "prospect_id": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "score_result": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "scorepro.WgScoreproResponse": {
            "type": "object",
            "properties": {
                "max_dsr": {
                    "type": "integer"
                },
                "phone_number": {
                    "type": "string"
                },
                "prospect_id": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "score_brand": {
                    "type": "string"
                },
                "score_result": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "localhost:9105",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
